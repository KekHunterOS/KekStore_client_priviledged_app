apply plugin: 'com.android.application'
apply plugin: 'checkstyle'

/* gets the version name from the latest Git tag, stripping the leading v off */

gradle.allprojects {
    ext.getVersionCode = { ->
        def manifestFile = file("app/src/main/AndroidManifest.xml")
        def pattern = Pattern.compile("versionCode=\"(\\d+)\"")
        def manifestText = manifestFile.getText()
        def matcher = pattern.matcher(manifestText)
        matcher.find()
        return Integer.parseInt(matcher.group(1))
    }
}

repositories {
    jcenter()
    google()
}

dependencies {
    testImplementation 'junit:junit:4.13.1'

    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test:rules:1.3.0'
}

android {
    compileSdkVersion 29
    buildToolsVersion '24.0.3'

    defaultConfig {
        archivesBaseName = "F-DroidPrivilegedExtension"
        versionCode 100
        versionName "1.0.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    compileOptions {
        compileOptions.encoding = "UTF-8"

        // Use Java 1.7, requires minSdk 8
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    aaptOptions {
        cruncherEnabled = false
    }

    buildTypes {
        all {
            // Keep IPackageInstallObserver and IPackageDeleteObserver
            minifyEnabled false
            useProguard false
            shrinkResources false
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError true

        htmlReport true
        xmlReport false
        textReport false

        lintConfig file("lint.xml")
    }

    File signFile = rootProject.file('signing.properties')
    if (signFile.exists()) {
        Properties properties = new Properties()
        properties.load(new FileInputStream(signFile))
        signingConfigs {
            release {
                storeFile rootProject.file(properties['key.store'])
                storePassword properties['key.store.password']
                keyAlias properties['key.alias']
                keyPassword properties['key.alias.password']
            }
        }
        buildTypes.release.signingConfig signingConfigs.release
    }
}

checkstyle {
    toolVersion = '7.2'
}

task checkstyle(type: Checkstyle) {
    configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    source 'src/main/java'
    include '**/*.java'

    classpath = files()
}
